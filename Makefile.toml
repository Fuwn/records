# -------------
# | Variables |
# -------------
[env]
PORT=8080

# ------------
# | Wrappers |
# ------------
[tasks.fmt]
command = "cargo"
args = ["fmt"]
private = true

[tasks.check]
command = "cargo"
args = ["check"]
private = true

[tasks.clippy]
command = "cargo"
args = ["clippy"]
private = true

# -------------
# | Executors |
# -------------
[tasks.checkf]
dependencies = ["fmt", "check"]

[tasks.checkfc]
dependencies = ["fmt", "check", "clippy"]

[tasks.run]
dependencies = ["checkf"]
command = "cargo"
args = ["run"]

[tasks.runw]
dependencies = ["checkf"]
command = "cargo"
args = ["run"]
watch = true

[tasks.docker-build]
command = "nix-build"
args = ["docker.nix"]

[tasks.docker-load]
script_runner = "@shell"
script = '''
docker load < result
'''

[tasks.docker-run]
command = "docker"
args = [
  "run",
  "--name", "Records",
  "-p", "8080:80",
  "fuwn/records"
]

[tasks.docker-run-i]
command = "docker"
args = [
  "run",
  "-it",
  "--name", "Records",
  "-p", "8080:80",
  "fuwn/records"
]

# Build 'n' load
[tasks.bnl]
dependencies = ["docker-build", "docker-load"]

[tasks.ask-github-token]
script = '''
#!@duckscript

echo github token:
github_token = read

echo set ${github_token} as the current github token
set_env GITHUB_TOKEN ${github_token}
'''

[tasks.act]
dependencies = ["ask-github-token"]
command = "act"
args = ["-s", "GITHUB_TOKEN=${GITHUB_TOKEN}"]
